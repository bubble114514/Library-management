<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.UserMapper">
    <insert id="save">
        insert into user(name,username,age,phone,sex,address,account)
        values (#{name},#{username},#{age},#{phone},#{sex},#{address},#{account})
    </insert>
    <update id="update">
        update user
        set name    = #{name},
            age     = #{age},
            sex     = #{sex},
            phone   = #{phone},
            address = #{address},
            account = #{account},
            status  = #{status}

        where id = #{id}
    </update>
    <update id="updateByUserNo">
        update user set account =account+ #{score} where username = #{userName}
    </update>
    <update id="decrAccount">
        UPDATE user
        SET account = account - #{score}
        WHERE username = #{userNo} AND account >= #{score}
    </update>
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>
    <select id="list" resultType="com.example.springboot.entity.User">
        select *
        from user
    </select>
    <select id="listByCondition" resultType="com.example.springboot.entity.User">
        select * from user
        <where>
            <if test="name != null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="phone != null">
                and phone like concat('%',#{phone},'%')
            </if>
        </where>
        order by id desc
    </select>
    <select id="getById" resultType="com.example.springboot.entity.User">
        select * from user where id = #{id}
    </select>
    <select id="getByUserName" resultType="com.example.springboot.entity.User">
        select * from user where username = #{username}

    </select>
</mapper>
